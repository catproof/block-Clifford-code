from qiskit.quantum_info import Pauli
from qiskit import QuantumRegister
from qiskit import QuantumCircuit

def data_qubits_tables():
    qc = QuantumCircuit(QuantumRegister(2))
    qc.cx(1,0)
    qc = qc.inverse()
    print("CX(X ⊗ I)CX† = " + Pauli("XI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[1])
    print("CX(Y ⊗ I)CX† = " + Pauli("YI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[1])
    print("CX(Z ⊗ I)CX† = " + Pauli("ZI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[1])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.s(1)
    qc.h(1)
    qc.cx(1,0)
    qc = qc.inverse()
    print("CXHS(X ⊗ I)S†H†CX† = " + Pauli("XI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[2])
    print("CXHS(Y ⊗ I)S†H†CX† = " + Pauli("YI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[2])
    print("CXHS(Z ⊗ I)S†H†CX† = " + Pauli("ZI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[1])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.h(1)
    qc.cx(1,0)
    qc = qc.inverse()
    print("CXH(X ⊗ I)H†CX† = " + Pauli("XI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[1])
    print("CXH(Y ⊗ I)H†CX† = " + Pauli("YI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[2])
    print("CXH(Z ⊗ I)H†CX† = " + Pauli("ZI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[1])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.cy(1,0)
    qc.h(0)
    qc = qc.inverse()
    print("HCY(X ⊗ I)CY†H† = " + Pauli("XI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[2])
    print("HCY(Y ⊗ I)CY†H† = " + Pauli("YI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[2])
    print("HCY(Z ⊗ I)CY†H† = " + Pauli("ZI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[1])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.s(1)
    qc.h(1)
    qc.cy(1,0)
    qc.h(0)
    qc = qc.inverse()
    print("HCYHS(X ⊗ I)S†H†CY†H† = " + Pauli("XI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[1])
    print("HCYHS(Y ⊗ I)S†H†CY†H† = " + Pauli("YI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[2])
    print("HCYHS(Z ⊗ I)S†H†CY†H† = " + Pauli("ZI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[2])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.h(1)
    qc.cy(1,0)
    qc.h(0)
    qc = qc.inverse()
    print("HCYH(X ⊗ I)H†CY†H† = " + Pauli("XI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[1])
    print("HCYH(Y ⊗ I)H†CY†H† = " + Pauli("YI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[1])
    print("HCYH(Z ⊗ I)H†CY†H† = " + Pauli("ZI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[2])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.cz(1,0)
    qc.s(0)
    qc.h(0)
    qc = qc.inverse()
    print("HSCZ(X ⊗ I)CZ†S†H† = " + Pauli("XI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[1])
    print("HSCZ(Y ⊗ I)CZ†S†H† = " + Pauli("YI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[1])
    print("HSCZ(Z ⊗ I)CZ†S†H† = " + Pauli("ZI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[1])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.s(1)
    qc.h(1)
    qc.cz(1,0)
    qc.s(0)
    qc.h(0)
    qc = qc.inverse()
    print("HSCZHS(X ⊗ I)S†H†CZ†S†H† = " + Pauli("XI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[2])
    print("HSCZHS(Y ⊗ I)S†H†CZ†S†H† = " + Pauli("YI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[2])
    print("HSCZHS(Z ⊗ I)S†H†CZ†S†H† = " + Pauli("ZI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[1])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.h(1)
    qc.cz(1,0)
    qc.s(0)
    qc.h(0)
    qc = qc.inverse()
    print("HSCZH(X ⊗ I)H†CZ†S†H† = " + Pauli("XI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("XI").evolve(qc).to_label()[1])
    print("HSCZH(Y ⊗ I)H†CZ†S†H† = " + Pauli("YI").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("YI").evolve(qc).to_label()[2])
    print("HSCZH(Z ⊗ I)H†CZ†S†H† = " + Pauli("ZI").evolve(qc).to_label()[0] + " ⊗ " + Pauli("ZI").evolve(qc).to_label()[1])
    print("")
    
    
data_qubits_tables()

def signature_qubits_table():
    qc = QuantumCircuit(QuantumRegister(2))
    qc.cx(1,0)
    qc = qc.inverse()
    print("CX(I ⊗ X)CX† = " + Pauli("IX").evolve(qc).to_label()[0] + " ⊗ " + Pauli("IX").evolve(qc).to_label()[1])
    print("CX(I ⊗ Y)CX† = " + Pauli("IY").evolve(qc).to_label()[0] + " ⊗ " + Pauli("IY").evolve(qc).to_label()[1])
    print("CX(I ⊗ Z)CX† = " + Pauli("IZ").evolve(qc).to_label()[0] + " ⊗ " + Pauli("IZ").evolve(qc).to_label()[1])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.cy(1,0)
    qc.h(0)
    qc = qc.inverse()
    print("HCY(I ⊗ X)CY†H† = " + Pauli("IX").evolve(qc).to_label()[0] + " ⊗ " + Pauli("IX").evolve(qc).to_label()[1])
    print("HCY(I ⊗ Y)CY†H† = " + Pauli("IY").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("IY").evolve(qc).to_label()[2])
    print("HCY(I ⊗ Z)CY†H† = " + Pauli("IZ").evolve(qc).to_label()[0] + " ⊗ " + Pauli("IZ").evolve(qc).to_label()[1])
    print("")
    
    qc = QuantumCircuit(QuantumRegister(2))
    qc.cz(1,0)
    qc.s(0)
    qc.h(0)
    qc = qc.inverse()
    print("HSCZ(I ⊗ X)CZ†S†H† = " + Pauli("IX").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("IX").evolve(qc).to_label()[2])
    print("HSCZ(I ⊗ Y)CZ†S†H† = " + Pauli("IY").evolve(qc).to_label()[:2] + " ⊗ " + Pauli("IY").evolve(qc).to_label()[2])
    print("HSCZ(I ⊗ Z)CZ†S†H† = " + Pauli("IZ").evolve(qc).to_label()[0] + " ⊗ " + Pauli("IZ").evolve(qc).to_label()[1])
    print("")
    
signature_qubits_table()